--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
unit [1E-6 sec] |     numpy     |      nj       |    nj+fas     |    nj+par     |  nj+fas+par   |      vec      |   vec+enum    |  guvec+enum   |    vec+par    | guvec+enum+par
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n=10            |     903.2     |      81.6     |      81.7     |   20145.5     |   29484.2     |       5.4     |       4.6     |     141.7     |     196.7     |     275.4
n=100           |    2050.8     |     647.3     |     782.5     |   45884.7     |   33097.5     |      12.9     |      10.1     |     655.5     |     178.9     |     741.8
n=1000          |    5292.3     |    3390.5     |    3427.0     |   25144.6     |   30408.4     |      64.3     |      57.7     |    5819.7     |     311.1     |    4802.4
n=10000         |   36463.6     |   36995.2     |   34523.5     |   51106.7     |   52621.0     |     658.5     |     329.9     |   39242.2     |     502.4     |   35011.0
n=100000        |  383662.1     |  504781.5     |  375228.7     |  264666.1     |  362123.5     |    3166.1     |    3145.5     |  392948.0     |    2748.4     |  349282.4
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Conclusion:
1. numba.vectorize is really fast
2. using Enum.mem.value in numba.vectorize function seems good
3. use parallel flag only when the number of points is extreamly large (>=100x100x100)
4. numba.njit is bad?! even slower than numpy when number of points gets larger
5. fastmath does nothing?
6. numba.guvectorize performs not good?
