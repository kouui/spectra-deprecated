----------------------------------------------------------------
unit [1E-6 sec] |     numpy     |    nb.njit    |    nb.vec
----------------------------------------------------------------
n=10            |     242.8     |      39.0     |       4.0
n=100           |     236.8     |      54.5     |       4.6
n=1000          |     469.6     |     207.6     |       7.2
n=10000         |    2302.4     |    2214.2     |      22.8
n=100000        |   43855.2     |   46617.6     |     365.1
----------------------------------------------------------------
----------------------------------------------------------------
unit [1E-6 sec] |     numpy     |    nb.njit    |    nb.vec
----------------------------------------------------------------
n=10            |      53.9     |      15.3     |       9.2
n=100           |     499.1     |     105.2     |       9.3
n=1000          |    6700.2     |    2917.4     |      15.7
n=10000         |  228120.9     |  226710.4     |      23.8
n=100000        | 36978938.1     | 40018220.8     |     322.7
----------------------------------------------------------------
----------------------------------------------------------------
unit [1E-6 sec] |     numpy     |    nb.njit    |    nb.vec
----------------------------------------------------------------
n=10            |      29.0     |       6.5     |       3.9
n=100           |     242.7     |      59.5     |       4.3
n=1000          |    3945.7     |    1886.2     |       7.7
n=10000         |  223853.9     |  250031.7     |      23.6
n=100000        | 35770929.3     | 36721870.9     |     356.1
----------------------------------------------------------------

Conclusion :
  1. numba.vectorize is excellent!
  2. Time(numpy)/Time(vectorize) ~ #operation
  3. Time(numpy)/Time(vectorize) has nothing to do with the array size
  4. njit perform worse than numpy where array-size > 100x100
  5. njit is good where array-size < 100 and #operation < 50
