----------------------------------------------------------------
unit [1E-6 sec] |    np.sum     |  np.sum+njit  |   loop+njit
----------------------------------------------------------------
n=10            |       4.1     |       0.6     |       0.4
n=100           |       3.8     |       0.6     |       0.5
n=1000          |       4.4     |       1.5     |       1.4
n=10000         |       7.7     |      12.1     |      10.5
n=100000        |      42.5     |      97.5     |     100.7
n=1000000       |     708.3     |    1163.2     |    1674.9
n=10000000      |    5122.4     |   11281.5     |   10762.0
----------------------------------------------------------------
----------------------------------------------------------------
unit [1E-6 sec] |    np.dot     |  np.dot+njit  |   loop+njit
----------------------------------------------------------------
n=10            |       5.1     |       2.3     |       1.1
n=100           |       3.2     |       1.6     |       0.9
n=1000          |       2.4     |       3.3     |       1.9
n=10000         |       4.9     |      15.8     |      11.6
n=100000        |      65.7     |     465.2     |     125.8
n=1000000       |    1960.2     |    7550.6     |    1376.7
n=10000000      |    9389.9     |   69876.9     |   12731.0
----------------------------------------------------------------
--------------------------------------------------------------------------------
unit [1E-6 sec] |   np solve    |   sol+loop    | sol+loop+njit | sol+loop+guvec
--------------------------------------------------------------------------------
n=10            |    4616.8     |    2089.5     |    2593.3     |    2079.1
n=100           |   19667.0     |   22076.9     |   24602.1     |   20673.1
n=1000          |  195663.8     |  227899.1     |  203907.2     |  201592.4
n=10000         | 1829792.4     | 2185751.5     | 2136617.1     | 2133371.6
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
unit [1E-6 sec] |      sol      |   sol+loop    | sol+loop+njit | sol+loop+guvec
--------------------------------------------------------------------------------
nxn=100         |     360.7     |    2339.4     |     537.6     |     560.5
nxn=10000       |   18138.3     |   29456.9     |   24807.5     |   31553.1
nxn=1000000     | 3018151.5     | 3296411.9     | 3480706.2     | 3537324.8
--------------------------------------------------------------------------------

Conclusion:
  1. np.linalg.solve will automatically make the use of all your computational threads (cores)
  2. for vector functions, pure numpy version is faster when n > 100x100, so we could use njit if necessary
  3. for linear algebra, pure numpy version is the fastest, could use loop+njit if necessary
  4. for matrix multiplication, use pure @ or @+njit, don't use loop

matrix multiplication :
--------------------------------------------------------------------------------
unit [1E-6 sec] |     np @      |   np @+njit   | loop(njit)+njit | loop(loop)+njit
--------------------------------------------------------------------------------
nxn=100         |       5.1     |       2.8     |       9.6       |       2.2
nxn=10000       |     136.2     |     219.4     |    1992.4       |    1122.9
nxn=1000000     |   44207.5     |   46243.5     | 2948951.3       | 3020145.7
--------------------------------------------------------------------------------
