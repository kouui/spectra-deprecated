----------------------------------------------------------------------------------------------------------------
unit [1E-6 sec] |    normal     |     guvec     |  guvec_nopy   | guvec_nopy_par |     njit      |   njit_loop
----------------------------------------------------------------------------------------------------------------
n=10            |     181.3     |      46.3     |      50.3     |     165.4     |      34.0     |      23.0
n=100           |     206.2     |      73.9     |     153.4     |     161.5     |      63.9     |      89.8
n=1000          |     585.8     |     360.0     |     360.3     |     632.2     |     560.2     |     765.8
n=10000         |    4734.1     |    3564.4     |    3432.5     |    3676.9     |    3548.5     |    7538.9
n=100000        |   46331.1     |   40253.0     |   40314.1     |   39927.3     |   40569.2     |   81355.1
n=1000000       |  635326.9     |  532365.1     |  521208.2     |  520812.0     |  544830.5     |  902800.1
----------------------------------------------------------------------------------------------------------------

Conclusion:
  1. parallel in guvectorize does not help
  2. guvectorize and njit does not help to naive loop computation, since the function call inside the loop is already optimized by vectorize
  3. guvectorize has its flexibility on broadcasting, which take advantages on njit
  4. njit+loop over spatial points is 2x times slower. Therefore, if it is unnecessary, let's use normal (guvec+nopython)
