

----------------------------------------------------------------------------------------------------------------------------------------------------------------
unit [1E-6 sec] |   np (noif)   |      np       |    np+Enum    |   nb (noif)   | nb loop (noif) | nb vec (noif) |      nb       |    nb vec     |    nb+Enum
----------------------------------------------------------------------------------------------------------------------------------------------------------------
n=10            |      85.4     |      82.9     |      86.6     |       9.0     |       3.6     |       1.4     |       8.5     |       2.1     |      54.3
n=100           |     111.0     |     110.1     |     113.3     |      40.5     |      28.3     |       3.8     |      39.8     |       4.5     |      86.3
n=1000          |     422.6     |     427.3     |     427.6     |     356.7     |     292.2     |      30.8     |     350.8     |      30.1     |     403.7
n=10000         |    3395.3     |    3441.4     |    3418.0     |    3678.1     |    2960.5     |     293.1     |    3514.1     |     285.7     |    3592.0
----------------------------------------------------------------------------------------------------------------------------------------------------------------

Conclusion :
  1. numba.vectorize is 10x times faster than numba.njit, so please use numba.vectorize as much as possible (at least in the low level function)
  2. break down vectorized computation to loop will slightly increase the numba optimization with numba.njit
  3. although numba says it is able to recognize Enum class, however, passing Enum's member as fnction argument breaks down numba optimization
  4. if condition is time expensive if the computation inside if condition is very simple, we should use hash map in this case.
  5. todo : need to benchmark the difference of using hashing(dictionary) instead of if condition for naive computation.
